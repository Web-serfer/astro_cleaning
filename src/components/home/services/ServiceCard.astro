---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import placeholderImg from '@assets/home/placholder.png';

export interface Props {
    title?: string;
    description?: string;
    buttonText?: string;
    href?: string;
    iconType?: 'arrow' | 'external';
    promoTag?: string;
    details?: string[];
}

const {
    title = "Service Title",
    description = "Service description goes here.",
    buttonText = "View Service",
    href = "#",
    iconType = "external",
    promoTag,
    details,
} = Astro.props;
---

<div class="bg-violet-50 rounded-3xl flex flex-col h-full text-zinc-800 overflow-hidden shadow-sm hover:shadow-lg transition-all duration-500 ease-out">
    <!-- Контейнер для изображения -->
    <div class="relative h-2/5 p-6 overflow-hidden">
        <div class="w-full h-full overflow-hidden rounded-2xl">
            <Image
                src={placeholderImg}
                alt={title}
                width={400}
                height={250}
                class="w-full h-full object-cover transition-all duration-700 ease-out group-hover:scale-110"
            />
        </div>

        <!-- Промо-тег -->
        {promoTag && (
            <span class="absolute top-8 left-8 z-20 bg-white/80 backdrop-blur-sm text-violet-700 text-xs font-semibold px-3 py-1 rounded-full border border-violet-200 transition-all duration-500 ease-out opacity-0 group-hover:opacity-100 group-hover:translate-y-0">
            {promoTag}
        </span>
        )}

        <a
            href={href}
            aria-label={`Learn more about ${title}`}
            class="absolute top-6 right-6 z-20 p-2 rounded-full transition-all duration-500 ease-out opacity-0 group-hover:opacity-100 hover:scale-110"
        >
            <!-- Иконка по умолчанию и при наведении -->
            <div class="relative w-7 h-7">
                <Icon name="externalLinkEnter" class="w-7 h-7 text-black transition-colors duration-300 hidden group-hover:block absolute top-0 left-0" />
            </div>
        </a>
    </div>

    <!-- Текстовый контент -->
    <div class="flex-grow flex flex-col p-6 h-3/5">
        <h3 class="text-[22px] font-semibold mb-1 transition-colors duration-300 group-hover:text-violet-700">{title}</h3>
        <p class="text-[14px] text-black mb-2 flex-grow transition-colors duration-300 group-hover:text-zinc-700">{description}</p>

        <!-- Детали -->
        {details && details.length > 0 && (
                <div class="flex flex-wrap gap-2 my-3">
                    {details.map((detail, index) => (
                            <span
                                    class="text-xs font-medium text-zinc-500 border border-dashed border-zinc-400 rounded-full px-3 py-1 transition-all duration-300 ease-out group-hover:border-violet-300 group-hover:text-violet-600 group-hover:bg-violet-50"
                                    style={`transition-delay: ${index * 50}ms;`}
                            >
                        {detail}
                    </span>
                    ))}
                </div>
        )}

        <!-- Кнопка -->
        <a
                href={href}
                class="mt-auto block w-full text-center font-normal text-black border border-violet-300 rounded-full px-6 py-3 transition-all duration-300 ease-out hover:bg-violet-100 hover:border-violet-400 hover:text-violet-700 group-hover:shadow-sm"
        >
            {buttonText}
        </a>
    </div>
</div>

<style>
    /* Улучшение производительности */
    .service-card-wrapper {
        transform: translateZ(0);
        backface-visibility: hidden;
        perspective: 1000px;
    }

    /* Плавное появление элементов */
    .group:hover .service-card-wrapper {
        animation: gentleLift 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    }

    @keyframes gentleLift {
        0% {
            transform: scale(1) translateY(0);
        }
        100% {
            transform: scale(1.05) translateY(-4px);
        }
    }
</style>